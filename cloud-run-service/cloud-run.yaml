# Cloud Run service configuration for Trading Bot
# This file can be used with `gcloud run services replace cloud-run.yaml`

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: spx-straddle-bot
  labels:
    app: spx-straddle-bot
    environment: production
  annotations:
    run.googleapis.com/description: "SPX Straddle Trading Bot for ATM straddle strategy"
    run.googleapis.com/launch-stage: GA
spec:
  template:
    metadata:
      labels:
        app: spx-straddle-bot
        version: v1
      annotations:
        # Scaling configuration
        autoscaling.knative.dev/maxScale: "1"
        autoscaling.knative.dev/minScale: "0"
        
        # Resource allocation
        run.googleapis.com/memory: "1Gi"
        run.googleapis.com/cpu: "1000m"
        
        # Execution environment
        run.googleapis.com/execution-environment: gen2
        
        # Request timeout (1 hour for long-running bot)
        run.googleapis.com/timeout: "3600s"
        
        # Health checks
        run.googleapis.com/health-check-path: "/health"
        
    spec:
      # Service account for accessing secrets and other GCP services
      serviceAccountName: spx-straddle-bot-service-account
      
      # Request timeout
      timeoutSeconds: 3600
      
      containers:
      - name: spx-straddle-bot
        image: gcr.io/PROJECT_ID/spx-straddle-bot:latest
        
        ports:
        - containerPort: 8080
          name: http1
          
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: PAPER_TRADING
          value: "true"
        - name: RUNNING_IN_CLOUD
          value: "true"
        - name: SPX_SYMBOL
          value: "$SPXW.X"
        - name: ENTRY_TIME
          value: "09:33"
        - name: TARGET_PROFIT
          value: "20"
        - name: EXIT_TIME
          value: "15:50"
        - name: MAX_POSITION_VALUE
          value: "10000"
          
        # Environment variables from Secret Manager
        - name: TRADESTATION_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: tradestation-client-id
              key: latest
        - name: TRADESTATION_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: tradestation-client-secret
              key: latest
        - name: TRADESTATION_REFRESH_TOKEN
          valueFrom:
            secretKeyRef:
              name: tradestation-refresh-token
              key: latest
              
        # Resource requests and limits
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          
        # Readiness probe  
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        # Startup probe (for slow-starting services)
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30  # Allow up to 5 minutes for startup
          
  traffic:
  - percent: 100
    latestRevision: true